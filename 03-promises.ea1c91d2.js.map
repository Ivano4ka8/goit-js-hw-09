{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACeC,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAsBC,G,kBAQhB,IAAIC,EAAWC,EAAI,EACbC,EAASC,OAAOC,EAAMC,OAASC,EAAKD,MAAQJ,EAClDM,QAAQC,IAAIN,GAiBlB,SAAuBO,EAAUL,GAC/B,IAAMM,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUL,UAEpBW,EAAO,CAAEN,WAAUL,S,GAEpBA,E,IAxBDa,CAAcjB,EAAUE,GACrBgB,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAeU,EAALf,MACjBgB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAfd,EAAS,QAAac,OAAPrB,EAAO,M,IAGlDsB,OAAM,SAAAL,G,IAAGV,EAAQU,EAARV,SAAUgB,EAAMN,EAANM,OAClBL,EAAA1B,GAAS2B,OAAOK,QACd,sBAAqCH,OAAfd,EAAS,QAAac,OAAPE,EAAO,M,KAnBtD1B,EAAM4B,iBACN,IAAgCC,EAAA7B,EAAM8B,cAAcC,SAA5C1B,EAAwBwB,EAAxBxB,MAAOE,EAAiBsB,EAAjBtB,KAAMyB,EAAWH,EAAXG,OAErB,GAAI3B,EAAMC,MAAQ,GAAKC,EAAKD,MAAQ,GAAK0B,EAAO1B,MAAQ,EACtDe,EAAA1B,GAAS2B,OAAOW,QAAS,yCAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAO1B,MAAO4B,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n\n  if (delay.value < 0 || step.value < 0 || amount.value < 0) {\n    Notiflix.Notify.warning(`❗ Please enter a positive number`);\n  } else {\n    for (let i = 0; i < amount.value; i++) {\n      let position = i + 1;\n      const delays = Number(delay.value) + step.value * i;\n      console.log(delays);\n\n      createPromise(position, delays)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delays}ms`\n          );\n        })\n        .catch(({ position, delays }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delays}ms`\n          );\n        });\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","position1","i","delays1","Number","delay","value","step","console","log","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","$parcel$interopDefault","Notify","success","concat","catch","delays","failure","preventDefault","_elements","currentTarget","elements","amount","warning","i1","_loop"],"version":3,"file":"03-promises.ea1c91d2.js.map"}